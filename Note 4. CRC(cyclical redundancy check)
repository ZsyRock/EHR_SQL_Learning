The data payload of a traditional Ethernet frame can be anywhere from 46-1500 bytes long. 
This contains all of the data from higher layers, such as the IP, transport, and application layers that actually being transmitted. 
Following that data, we have what's known as a frame check sequence. This is a four-byte or 32-bit number that represents a checksum value for the entire frame. 
This checksum value is calculated by performing what's known as a cyclical redundancy check against the frame. 
A cyclical redundancy check, or CRC, is an important concept for data integrity and is used all over computing, 
not just network transmissions. A CRC is basically a mathematical transformation that uses polynomial division to create a number that represents a larger set of data. 
Anytime you perform a CRC against a set of data, you should end up with the same checksum number. 
The reason it's included in an Ethernet frame is so that the receiving network interface can infer if it received uncorrupted data. 
When a device gets ready to send an Ethernet frame, it collects all the information we just covered, like the destination and originating MAC addresses, 
the data payload, and so on. Then it performs a CRC against that data and attaches the resulting checksum number as the frame check sequence at the end of the frame. 
This data is then sent across a link and received at the other end. Here, all the various fields of the Ethernet frame are collected, 
and now the receiving side performs a CRC against that data. If the checksum computed by the receiving end doesn't match the checksum in the frame check sequence field, 
the data is thrown out. This is because some amount of data must have been lost or corrupted during transmission. 
It's then up to a protocol at a higher layer to decide if that data should be retransmitted. Ethernet itself only reports on data integrity, 
it doesn't perform data recovery. You've gotten the basics of networking now, nice work.
